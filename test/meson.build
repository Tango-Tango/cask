if get_option('build_tests')
    test_dependencies = [
        subproject('gtest').get_variable('gtest_dep'),
        subproject('trompeloeil').get_variable('trompeloeil_dep')
    ]

    test_sources = [
        'cask/TestEither.cpp',
        'cask/TestErased.cpp',
        'cask/TestFiber.cpp',
        'cask/TestList.cpp',
        'cask/TestMVar.cpp',
        'cask/TestObservable.cpp',
        'cask/TestPool.cpp',
        'cask/TestPromiseDeferred.cpp',
        'cask/TestQueue.cpp',
        'cask/TestRef.cpp',
        'cask/TestResource.cpp',
        'cask/TestTask.cpp',
        'cask/fiber/TestFiberOp.cpp',
        'cask/fiber/TestFiberValue.cpp',
        'cask/mvar/TestMVarState.cpp',
        'cask/observable/TestObservableAppendAll.cpp',
        'cask/observable/TestObservableBuffer.cpp',
        'cask/observable/TestObservableCancel.cpp',
        'cask/observable/TestObservableConcat.cpp',
        'cask/observable/TestObservableDistinctUntilChanged.cpp',
        'cask/observable/TestObservableDistinctUntilChangedBy.cpp',
        'cask/observable/TestObservableFilter.cpp',
        'cask/observable/TestObservableFlatMap.cpp',
        'cask/observable/TestObservableFlatMapOptional.cpp',
        'cask/observable/TestObservableFlatScan.cpp',
        'cask/observable/TestObservableFlatten.cpp',
        'cask/observable/TestObservableForeach.cpp',
        'cask/observable/TestObservableForeachTask.cpp',
        'cask/observable/TestObservableFromTask.cpp',
        'cask/observable/TestObservableGuarantee.cpp',
        'cask/observable/TestObservableLast.cpp',
        'cask/observable/TestObservableMap.cpp',
        'cask/observable/TestObservableMapBothTask.cpp',
        'cask/observable/TestObservableMapError.cpp',
        'cask/observable/TestObservableMapTask.cpp',
        'cask/observable/TestObservableMerge.cpp',
        'cask/observable/TestObservableMergeAll.cpp',
        'cask/observable/TestObservableNever.cpp',
        'cask/observable/TestObservableQueue.cpp',
        'cask/observable/TestObservableRepeatTask.cpp',
        'cask/observable/TestObservableScan.cpp',
        'cask/observable/TestObservableScanTask.cpp',
        'cask/observable/TestObservableSwitchMap.cpp',
        'cask/observable/TestObservableTake.cpp',
        'cask/observable/TestObservableTakeWhile.cpp',
        'cask/observable/TestObservableTakeWhileInclusive.cpp',
        'cask/scheduler/TestBenchScheduler.cpp',
        'cask/scheduler/TestScheduler.cpp',
        'cask/task/TestTaskAssignment.cpp',
        'cask/task/TestTaskAsyncBoundary.cpp',
        'cask/task/TestTaskDefer.cpp',
        'cask/task/TestTaskDeferFiber.cpp',
        'cask/task/TestTaskDelay.cpp',
        'cask/task/TestTaskDoOnCancel.cpp',
        'cask/task/TestTaskEval.cpp',
        'cask/task/TestTaskFlatMapBoth.cpp',
        'cask/task/TestTaskFlatMapError.cpp',
        'cask/task/TestTaskGuarantee.cpp',
        'cask/task/TestTaskNever.cpp',
        'cask/task/TestTaskNone.cpp',
        'cask/task/TestTaskOnCancelRaiseError.cpp',
        'cask/task/TestTaskPure.cpp',
        'cask/task/TestTaskRace.cpp',
        'cask/task/TestTaskRaiseError.cpp',
        'cask/task/TestTaskRecover.cpp',
        'cask/task/TestTaskTimeout.cpp',
        'main.cpp'
    ]

    testexe = executable(
        'testexe',
        test_sources,
        include_directories: includes,
        link_with: cask_lib,
        dependencies: dependencies + test_dependencies
    )

    test('cask unit tests', testexe, timeout: 1200, env: ['ASAN_OPTIONS=detect_leaks=1'])
endif
